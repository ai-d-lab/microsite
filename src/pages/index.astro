---
import BaseLayout from "../layouts/BaseLayout.astro";
import Image from "../components/Image.astro";
import { getCollection } from "astro:content";

const pinnedPosts = (
  await getCollection("blog", ({ data }) => {
    return data.draft !== true && data.pinned === true; //filter
  })
).sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

const normalPosts = (
  await getCollection("blog", ({ data }) => {
    return data.draft !== true && data.pinned !== true; //filter
  })
).sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

const posts = [...pinnedPosts, ...normalPosts];

/* Until we have a proper design solution for this... ;-) */
function createAppearanceStyle(appearance, pinned) {
  if (pinned) {
    //if its pinned, it gets highest apearance
    return "border-4 col-span-2";
  }
  switch (appearance) {
    case "S":
      return "border-none";
    case "M":
      return "border-2";
    case "L":
      return "border-4";
  }
  return "border-none";
}

// the posts are displayed in a grid layout, with 2 columns depending on the screen size
// each post has the same height, if there is more text than the other posts, the text will be cut off
---

<BaseLayout>
  <section class="grid md:grid-cols-2 gap-2 mt-0 gap-y-8 dark:text-white">
    {
      posts.map((post) => (
        <div
          class:list={[
            "pb-8 px-2 text-3xl h-full font-public font-thin text-black dark:text-gray-200",
            createAppearanceStyle(post.data.appearance, post.data.pinned),
          ]}
        >
          <a href={`/blog/${post.slug}/`}>
            <Image
              src={post.data.heroImage}
              alt={post.data.description}
              width={post.data.pinned ? 900 : 500}
              class="mb-xl4 mx-auto"
            />
            <h2 class="text-black dark:text-white pt-4">{post.data.title}</h2>
            <h3 class="font-medium text-black">{post.data.subtitle}</h3>
          </a>
        </div>
      ))
    }
  </section>
</BaseLayout>
